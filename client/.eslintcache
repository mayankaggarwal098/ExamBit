[{"C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\index.js":"1","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\App.js":"3","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\component\\Header.jsx":"4","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\screen\\Register.jsx":"5","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\screen\\Login.jsx":"6","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\store.js":"7","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\reducer\\userReducer.jsx":"8","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\constants\\userConstanst.jsx":"9","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\actions\\userAction.jsx":"10","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\component\\httpService.jsx":"11","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\screen\\QuestionList.jsx":"12","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\screen\\QuestionCreate.jsx":"13","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\reducer\\questionReducer.jsx":"14","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\constants\\questionConstant.jsx":"15","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\actions\\questionAction.jsx":"16","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\component\\Loader.jsx":"17","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\screen\\TestList.jsx":"18","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\screen\\TestCreate.jsx":"19","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\reducer\\testReducer.jsx":"20","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\constants\\testConstant.jsx":"21","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\actions\\testAction.jsx":"22","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\component\\QuestionPaper.jsx":"23","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\component\\QuestionDetails.jsx":"24"},{"size":664,"mtime":1609273851239,"results":"25","hashOfConfig":"26"},{"size":375,"mtime":1608739307332,"results":"27","hashOfConfig":"26"},{"size":1076,"mtime":1609478729302,"results":"28","hashOfConfig":"26"},{"size":3255,"mtime":1609319294445,"results":"29","hashOfConfig":"26"},{"size":3629,"mtime":1609273823826,"results":"30","hashOfConfig":"26"},{"size":1970,"mtime":1609273765465,"results":"31","hashOfConfig":"26"},{"size":1177,"mtime":1609516902870,"results":"32","hashOfConfig":"26"},{"size":979,"mtime":1609273761310,"results":"33","hashOfConfig":"26"},{"size":384,"mtime":1608804080103,"results":"34","hashOfConfig":"26"},{"size":2104,"mtime":1609564190684,"results":"35","hashOfConfig":"26"},{"size":465,"mtime":1609273739676,"results":"36","hashOfConfig":"26"},{"size":5538,"mtime":1609563602116,"results":"37","hashOfConfig":"26"},{"size":5368,"mtime":1609503163845,"results":"38","hashOfConfig":"26"},{"size":1276,"mtime":1609509850939,"results":"39","hashOfConfig":"26"},{"size":577,"mtime":1609516780674,"results":"40","hashOfConfig":"26"},{"size":2536,"mtime":1609323247417,"results":"41","hashOfConfig":"26"},{"size":411,"mtime":1609273745347,"results":"42","hashOfConfig":"26"},{"size":4540,"mtime":1609532221465,"results":"43","hashOfConfig":"26"},{"size":5755,"mtime":1609566204774,"results":"44","hashOfConfig":"26"},{"size":1194,"mtime":1609516880389,"results":"45","hashOfConfig":"26"},{"size":505,"mtime":1609516792298,"results":"46","hashOfConfig":"26"},{"size":2556,"mtime":1609517457993,"results":"47","hashOfConfig":"26"},{"size":2062,"mtime":1609530277212,"results":"48","hashOfConfig":"26"},{"size":1332,"mtime":1609531402246,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"szk4ug",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\index.js",[],["106","107"],"C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\App.js",[],"C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\component\\Header.jsx",["108"],"import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Nav, Navbar, Container, NavDropdown } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { logout } from '../actions/userAction';\r\nimport { useEffect } from 'react';\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { userInfo } = useSelector(state => state.userLogin);\r\n\r\n  const logOutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"primary\" variant=\"dark\">\r\n        <Container>\r\n          <LinkContainer to=\"/\">\r\n            <Navbar.Brand>Home</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              {userInfo &&\r\n                (userInfo.category === 'SUPERVISOR' ? (\r\n                  <>\r\n                    <LinkContainer to=\"/questions\">\r\n                      <Nav.Link>\r\n                        <i className=\"fas fa-list\" />\r\n                        &nbsp;All Questions\r\n                      </Nav.Link>\r\n                    </LinkContainer>\r\n                    <LinkContainer to=\"/tests\">\r\n                      <Nav.Link>\r\n                        <i className=\"fas fa-list\" />\r\n                        &nbsp;All Test\r\n                      </Nav.Link>\r\n                    </LinkContainer>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <Nav.Link>\r\n                      <i className=\"fas fa-list\" />\r\n                      &nbsp;All Test\r\n                    </Nav.Link>\r\n                    <Nav.Link>Pricing</Nav.Link>\r\n                  </>\r\n                ))}\r\n            </Nav>\r\n            <Nav>\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name.toUpperCase()} id=\"username\">\r\n                  <LinkContainer to=\"/profile\">\r\n                    <NavDropdown.Item>\r\n                      <i className=\"fas fa-user\" />\r\n                      &nbsp;PROFILE\r\n                    </NavDropdown.Item>\r\n                  </LinkContainer>\r\n\r\n                  <LinkContainer to=\"/login\">\r\n                    <NavDropdown.Item onClick={logOutHandler}>\r\n                      <i className=\"fas fa-sign-out-alt\" />\r\n                      &nbsp;LOGOUT\r\n                    </NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              ) : (\r\n                <>\r\n                  <LinkContainer to=\"/login\">\r\n                    <Nav.Link>\r\n                      <i className=\"fas fa-sign-in-alt\" />\r\n                      &nbsp;Login\r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n\r\n                  <LinkContainer to=\"/register\">\r\n                    <Nav.Link>\r\n                      <i className=\"fas fa-user-plus\" />\r\n                      &nbsp;Sign Up\r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n                </>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\screen\\Register.jsx",["109","110"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Form, Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { userRegister } from '../actions/userAction';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst Register = ({ history }) => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [category, setCategory] = useState('');\r\n\r\n  // const { loading, success, error } = useSelector( state => state.register )\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // useEffect( () => {\r\n\r\n  //     if( success ){\r\n  //         history.push('/login');\r\n  //     }\r\n  // }, [history, success]);\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      toast.error('Invalid Input');\r\n    } else {\r\n      dispatch(userRegister(name, email, password, category));\r\n      history.push('/login');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center my-5\">\r\n        <Col sx={12} md={6}>\r\n          <h2>SIGN UP</h2>\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                value={name}\r\n                placeholder=\"Enter name\"\r\n                onChange={e => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                value={email}\r\n                placeholder=\"Enter Email Address\"\r\n                onChange={e => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"category\">\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                value={category}\r\n                onChange={e => setCategory(e.target.value)}\r\n              >\r\n                <option value=\"\">Select Category</option>\r\n                <option value=\"SUPERVISOR\">Supervisor</option>\r\n                <option value=\"STUDENT\">Student</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                value={password}\r\n                placeholder=\"Enter Password\"\r\n                onChange={e => setPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"confirmPassword\">\r\n              <Form.Label>Confirm Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                value={confirmPassword}\r\n                placeholder=\"Confirm Password\"\r\n                onChange={e => setConfirmPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Submit\r\n            </Button>\r\n\r\n            <Row className=\"py-3 px-3\">\r\n              ALREADY HAVE AN ACCOUNT ? &nbsp;&nbsp;{' '}\r\n              <Link to=\"/login\">SIGN IN</Link>\r\n            </Row>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\screen\\Login.jsx",["111","112"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Button, Form, Row, Col } from 'react-bootstrap';\r\nimport { login } from '../actions/userAction';\r\n\r\nconst Login = ({ history }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const { loading, userInfo, error } = useSelector(state => state.userLogin);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push('/');\r\n    }\r\n  }, [userInfo, history]);\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center my-5\">\r\n        <Col sx={12} md={6}>\r\n          <h2>SIGN IN</h2>\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter Email Address\"\r\n                value={email}\r\n                onChange={e => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Enter Password\"\r\n                value={password}\r\n                onChange={e => setPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Login\r\n            </Button>\r\n\r\n            <Row className=\"py-3 px-3\">\r\n              NEW USER ? &nbsp;&nbsp; <Link to=\"/register\">REGISTER</Link>\r\n            </Row>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\store.js",[],"C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\reducer\\userReducer.jsx",[],"C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\constants\\userConstanst.jsx",[],"C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\actions\\userAction.jsx",[],"C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\component\\httpService.jsx",["113"],"import axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\naxios.interceptors.response.use(null, error => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n  if (!expectedError) {\r\n    toast.error('Unexpected error occured!');\r\n  }\r\n\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n};\r\n","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\screen\\QuestionList.jsx",["114","115"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  Table,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Container,\r\n  Modal,\r\n  ListGroup,\r\n} from 'react-bootstrap';\r\nimport { getAllQuestions } from '../actions/questionAction';\r\nimport { deleteQuestion } from '../actions/questionAction';\r\nimport Loader from '../component/Loader';\r\n\r\nconst QuestionList = ({ history }) => {\r\n  const [show, setShow] = useState(false);\r\n  const [pos, setIndex] = useState(0);\r\n\r\n  const { loading, questions } = useSelector(state => state.questionList);\r\n  const { loading: loadingCreate, success: successCreate } = useSelector(\r\n    state => state.createQuestion\r\n  );\r\n\r\n  const { loading: loadingDelete, success: successDelete } = useSelector(\r\n    state => state.questionDelete\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!questions) {\r\n      dispatch(getAllQuestions());\r\n    }\r\n  }, [questions, dispatch]);\r\n\r\n  const createHandler = () => {\r\n    history.push('/questions/create');\r\n  };\r\n\r\n  const deleteHandler = id => {\r\n    if (window.confirm('Are you sure ')) {\r\n      dispatch(deleteQuestion(id));\r\n    }\r\n  };\r\n\r\n  const set = index => {\r\n    setShow(true);\r\n    setIndex(index);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loadingCreate && <Loader />}\r\n      {loadingDelete && <Loader />}\r\n      {loading && <Loader />}\r\n      <Container>\r\n        <Row className=\"align-items-center\">\r\n          <Col>\r\n            <h3>All Questions</h3>\r\n          </Col>\r\n          <Col className=\"text-right\">\r\n            <Button className=\"my-3\" onClick={createHandler}>\r\n              <i className=\"fas fa-plus\"></i>&nbsp;&nbsp;Add New Question\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Table hover bordered striped responsive className=\"table-lg\">\r\n          <thead>\r\n            <tr>\r\n              <th>SUBJECT</th>\r\n              <th>QUESTION</th>\r\n              <th>WEIGHTAGE</th>\r\n              <th>&nbsp;&nbsp;ACTION&nbsp;&nbsp;</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {questions &&\r\n              questions.map((question, index) => (\r\n                <tr key={question._id}>\r\n                  <td>{question.subject}</td>\r\n                  <td>{question.questionBody}</td>\r\n                  <td>{question.weightage}</td>\r\n                  <td>\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      className=\"btn-sm\"\r\n                      onClick={() => set(index)}\r\n                    >\r\n                      <i className=\"fas fa-info-circle\"></i>\r\n                    </Button>\r\n                    &nbsp;\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      className=\"btn-sm\"\r\n                      onClick={() => deleteHandler(question._id)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </Table>\r\n      </Container>\r\n      {questions && questions[pos] && (\r\n        <Modal\r\n          show={show}\r\n          onHide={() => setShow(false)}\r\n          dialogClassName=\"my-modal\"\r\n          aria-labelledby=\"example-custom-modal-styling-title\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-custom-modal-styling-title\">\r\n              QuestionID: {questions[pos]._id}\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <strong>\r\n                  <b>SUBJECT</b>\r\n                </strong>{' '}\r\n                : {questions[pos].subject}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <strong>\r\n                  <b>WEIGHTAGE</b>\r\n                </strong>{' '}\r\n                : {questions[pos].weightage}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <strong>\r\n                  <b>QUESTION</b>\r\n                </strong>{' '}\r\n                : {questions[pos].questionBody}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <strong>\r\n                  <b>OPTIONS</b>\r\n                </strong>\r\n                <br></br>\r\n                {questions[pos].options.map((opt, index) => (\r\n                  <>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <strong>{index + 1}</strong>: {opt.optionBody}\r\n                    <br></br>\r\n                  </>\r\n                ))}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <strong>\r\n                  <b>Answer:</b>{' '}\r\n                </strong>\r\n                {questions[pos].options.map((opt, index) => (\r\n                  <>\r\n                    {opt.isAnswer && (\r\n                      <>\r\n                        <strong>Option{index + 1}</strong>: {opt.optionBody}\r\n                        ,&nbsp;\r\n                      </>\r\n                    )}\r\n                  </>\r\n                ))}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <strong>\r\n                  <b>EXPLANATION</b>\r\n                </strong>{' '}\r\n                : {questions[pos].explanation}\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Modal.Body>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuestionList;\r\n","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\screen\\QuestionCreate.jsx",["116","117","118","119"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Form, Button, Col, Container } from 'react-bootstrap';\r\nimport { addQuestion } from '../actions/questionAction';\r\n\r\nconst QuestionCreate = ({ history }) => {\r\n  const [questionBody, setQuestion] = useState('');\r\n  const [explanation, setExplanation] = useState('');\r\n  const [subject, setSubject] = useState('');\r\n  const [weightage, setWeightage] = useState(1);\r\n  const [opt1, setOpt1] = useState({ optionBody: '', isAnswer: false });\r\n  const [opt2, setOpt2] = useState({ optionBody: '', isAnswer: false });\r\n  const [opt3, setOpt3] = useState({ optionBody: '', isAnswer: false });\r\n  const [opt4, setOpt4] = useState({ optionBody: '', isAnswer: false });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { loading, success, error } = useSelector(\r\n    state => state.createQuestion\r\n  );\r\n\r\n  // useEffect( () => {\r\n  //     if( questionAdded ){\r\n  //         history.push('/questions');\r\n  //     }\r\n  // },[ questionAdded, history]);\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    const options = [opt1, opt2, opt3, opt4];\r\n    dispatch(\r\n      addQuestion({ questionBody, explanation, subject, weightage, options })\r\n    );\r\n    history.push('/questions');\r\n  };\r\n\r\n  return (\r\n    <Container className=\"my-5\">\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"question\">\r\n          <Form.Label>Question</Form.Label>\r\n          <Form.Control\r\n            required\r\n            placeholder=\"Question Description...\"\r\n            type=\"text\"\r\n            value={questionBody}\r\n            onChange={e => setQuestion(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"explanation\">\r\n          <Form.Label>Explanation</Form.Label>\r\n          <Form.Control\r\n            required\r\n            placeholder=\"Explanation....\"\r\n            as=\"textarea\"\r\n            row={3}\r\n            value={explanation}\r\n            onChange={e => setExplanation(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"subject\">\r\n            <Form.Label>Subject</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              placeholder=\"Subject\"\r\n              value={subject}\r\n              onChange={e => setSubject(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} controlId=\"weightage\">\r\n            <Form.Label>Weightage</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"number\"\r\n              placeholder=\"Select..\"\r\n              value={weightage}\r\n              onChange={e => setWeightage(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"option1\">\r\n            <Form.Label>Option A</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              placeholder=\"option...\"\r\n              value={opt1.optionBody}\r\n              onChange={e => setOpt1({ ...opt1, optionBody: e.target.value })}\r\n            />\r\n            <Form.Check\r\n              type=\"checkbox\"\r\n              checked={opt1.isAnswer}\r\n              onChange={e => setOpt1({ ...opt1, isAnswer: e.target.checked })}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} controlId=\"option2\">\r\n            <Form.Label>Option B</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              placeholder=\"option...\"\r\n              value={opt2.optionBody}\r\n              onChange={e => setOpt2({ ...opt2, optionBody: e.target.value })}\r\n            />\r\n            <Form.Check\r\n              type=\"checkbox\"\r\n              checked={opt2.isAnswer}\r\n              onChange={e => setOpt2({ ...opt2, isAnswer: e.target.checked })}\r\n            />\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"option3\">\r\n            <Form.Label>Option C</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              placeholder=\"option...\"\r\n              value={opt3.optionBody}\r\n              onChange={e => setOpt3({ ...opt3, optionBody: e.target.value })}\r\n            />\r\n            <Form.Check\r\n              type=\"checkbox\"\r\n              checked={opt3.isAnswer}\r\n              onChange={e => setOpt3({ ...opt3, isAnswer: e.target.checked })}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} controlId=\"option4\">\r\n            <Form.Label>Option D</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              placeholder=\"option...\"\r\n              value={opt4.optionBody}\r\n              onChange={e => setOpt4({ ...opt4, optionBody: e.target.value })}\r\n            />\r\n            <Form.Check\r\n              type=\"checkbox\"\r\n              checked={opt4.isAnswer}\r\n              onChange={e => setOpt4({ ...opt4, isAnswer: e.target.checked })}\r\n            />\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default QuestionCreate;\r\n","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\reducer\\questionReducer.jsx",[],"C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\constants\\questionConstant.jsx",[],"C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\actions\\questionAction.jsx",[],"C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\component\\Loader.jsx",[],"C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\screen\\TestList.jsx",["120","121"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  Table,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Container,\r\n  Modal,\r\n  Tab,\r\n  Tabs,\r\n} from 'react-bootstrap';\r\nimport { getTestPaperList, testPaperDelete } from '../actions/testAction';\r\nimport Loader from '../component/Loader';\r\nimport QuestionPaper from '../component/QuestionPaper';\r\nimport QuestionDetails from '../component/QuestionDetails';\r\n\r\nconst TestList = ({ history }) => {\r\n  const [show, setShow] = useState(false);\r\n  const [pos, setIndex] = useState(0);\r\n\r\n  const { loading, error, testPapers } = useSelector(\r\n    state => state.getTestPaper\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!testPapers) {\r\n      dispatch(getTestPaperList());\r\n    }\r\n  }, []);\r\n\r\n  const set = index => {\r\n    setShow(true);\r\n    setIndex(index);\r\n  };\r\n\r\n  const createHandler = () => {\r\n    history.push('/tests/create');\r\n  };\r\n\r\n  const deleteHandler = id => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(testPaperDelete(id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading && <Loader />}\r\n      <Container>\r\n        <Row className=\"align-items-center\">\r\n          <Col>\r\n            <h3>All Tests</h3>\r\n          </Col>\r\n          <Col className=\"text-right\">\r\n            <Button className=\"my-3\" onClick={createHandler}>\r\n              <i className=\"fas fa-plus\"></i>&nbsp;&nbsp;Create New Test\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Table hover bordered striped responsive className=\"table-lg\">\r\n          <thead>\r\n            <tr>\r\n              <th>SUBJECT</th>\r\n              <th>TITLE</th>\r\n              <th>DURATION(in minute)</th>\r\n              <th>&nbsp;&nbsp;ACTION&nbsp;&nbsp;</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {testPapers &&\r\n              testPapers.map((test, index) => (\r\n                <tr key={test._id}>\r\n                  <td>{test.subject}</td>\r\n                  <td>{test.title}</td>\r\n                  <td>{test.duration}</td>\r\n                  <td>\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      className=\"btn-sm\"\r\n                      onClick={() => set(index)}\r\n                    >\r\n                      <i className=\"fas fa-info-circle\"></i>\r\n                    </Button>\r\n                    &nbsp;\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      className=\"btn-sm\"\r\n                      onClick={() => deleteHandler(test._id)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </Table>\r\n      </Container>\r\n      {testPapers && testPapers[pos] && (\r\n        <Modal\r\n          show={show}\r\n          onHide={() => setShow(false)}\r\n          dialogClassName=\"my-modal\"\r\n          aria-labelledby=\"example-custom-modal-styling-title\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-custom-modal-styling-title\">\r\n              TestID: {testPapers[pos]._id}\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Tabs defaultActiveKey=\"details\" id=\"uncontrolled-tab-example\">\r\n              <Tab\r\n                eventKey=\"details\"\r\n                title={<i className=\"fas fa-info-circle\"> Details</i>}\r\n              >\r\n                <QuestionDetails testPapers={testPapers} pos={pos} />\r\n              </Tab>\r\n              <Tab\r\n                eventKey=\"questions\"\r\n                title={<i className=\"fas fa-question-circle\"> Question</i>}\r\n              >\r\n                <QuestionPaper testPapers={testPapers} pos={pos} />\r\n              </Tab>\r\n              <Tab\r\n                eventKey=\"trainee\"\r\n                title={<i className=\"fas fa-user\"> Trainees</i>}\r\n              >\r\n                rawat\r\n              </Tab>\r\n              <Tab\r\n                eventKey=\"statistics\"\r\n                title={<i className=\"fas fa-chart-bar\"> Statistics</i>}\r\n              >\r\n                rawat\r\n              </Tab>\r\n              <Tab\r\n                eventKey=\"feedback\"\r\n                title={<i className=\"fas fa-comments\"> FeedBack</i>}\r\n              >\r\n                rawat\r\n              </Tab>\r\n            </Tabs>\r\n          </Modal.Body>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TestList;\r\n","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\screen\\TestCreate.jsx",["122","123"],"C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\reducer\\testReducer.jsx",[],"C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\constants\\testConstant.jsx",[],"C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\actions\\testAction.jsx",[],"C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\component\\QuestionPaper.jsx",[],"C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\component\\QuestionDetails.jsx",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":6,"column":10,"nodeType":"130","messageId":"131","endLine":6,"endColumn":19},{"ruleId":"128","severity":1,"message":"129","line":1,"column":27,"nodeType":"130","messageId":"131","endLine":1,"endColumn":36},{"ruleId":"128","severity":1,"message":"132","line":2,"column":23,"nodeType":"130","messageId":"131","endLine":2,"endColumn":34},{"ruleId":"128","severity":1,"message":"133","line":11,"column":11,"nodeType":"130","messageId":"131","endLine":11,"endColumn":18},{"ruleId":"128","severity":1,"message":"134","line":11,"column":30,"nodeType":"130","messageId":"131","endLine":11,"endColumn":35},{"ruleId":"135","severity":1,"message":"136","line":16,"column":1,"nodeType":"137","endLine":21,"endColumn":3},{"ruleId":"128","severity":1,"message":"138","line":21,"column":44,"nodeType":"130","messageId":"131","endLine":21,"endColumn":57},{"ruleId":"128","severity":1,"message":"139","line":25,"column":44,"nodeType":"130","messageId":"131","endLine":25,"endColumn":57},{"ruleId":"128","severity":1,"message":"129","line":1,"column":27,"nodeType":"130","messageId":"131","endLine":1,"endColumn":36},{"ruleId":"128","severity":1,"message":"133","line":18,"column":11,"nodeType":"130","messageId":"131","endLine":18,"endColumn":18},{"ruleId":"128","severity":1,"message":"140","line":18,"column":20,"nodeType":"130","messageId":"131","endLine":18,"endColumn":27},{"ruleId":"128","severity":1,"message":"134","line":18,"column":29,"nodeType":"130","messageId":"131","endLine":18,"endColumn":34},{"ruleId":"128","severity":1,"message":"134","line":22,"column":20,"nodeType":"130","messageId":"131","endLine":22,"endColumn":25},{"ruleId":"141","severity":1,"message":"142","line":31,"column":6,"nodeType":"143","endLine":31,"endColumn":8,"suggestions":"144"},{"ruleId":"141","severity":1,"message":"145","line":29,"column":6,"nodeType":"143","endLine":29,"endColumn":8,"suggestions":"146"},{"ruleId":"147","severity":1,"message":"148","line":37,"column":31,"nodeType":"149","messageId":"150","endLine":37,"endColumn":33},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'successCreate' is assigned a value but never used.","'successDelete' is assigned a value but never used.","'success' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'testPapers'. Either include them or remove the dependency array.","ArrayExpression",["153"],"React Hook useEffect has missing dependencies: 'dispatch' and 'questions'. Either include them or remove the dependency array.",["154"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},"Update the dependencies array to be: [dispatch, testPapers]",{"range":"159","text":"160"},"Update the dependencies array to be: [dispatch, questions]",{"range":"161","text":"162"},[812,814],"[dispatch, testPapers]",[819,821],"[dispatch, questions]"]