[{"C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\index.js":"1","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\App.js":"3","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\component\\Header.jsx":"4","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\screen\\Register.jsx":"5","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\screen\\Login.jsx":"6","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\store.js":"7","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\reducer\\userReducer.jsx":"8","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\constants\\userConstanst.jsx":"9","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\actions\\userAction.jsx":"10","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\component\\httpService.jsx":"11","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\screen\\QuestionList.jsx":"12","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\screen\\QuestionCreate.jsx":"13","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\reducer\\questionReducer.jsx":"14","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\constants\\questionConstant.jsx":"15","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\actions\\questionAction.jsx":"16","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\component\\Loader.jsx":"17"},{"size":664,"mtime":1609014268028,"results":"18","hashOfConfig":"19"},{"size":375,"mtime":1608739307332,"results":"20","hashOfConfig":"19"},{"size":848,"mtime":1609061560509,"results":"21","hashOfConfig":"19"},{"size":3421,"mtime":1609171382464,"results":"22","hashOfConfig":"19"},{"size":4319,"mtime":1609072623881,"results":"23","hashOfConfig":"19"},{"size":1978,"mtime":1609015173613,"results":"24","hashOfConfig":"19"},{"size":950,"mtime":1609134538160,"results":"25","hashOfConfig":"19"},{"size":1093,"mtime":1609070083767,"results":"26","hashOfConfig":"19"},{"size":384,"mtime":1608804080103,"results":"27","hashOfConfig":"19"},{"size":1875,"mtime":1609070433615,"results":"28","hashOfConfig":"19"},{"size":484,"mtime":1608814697851,"results":"29","hashOfConfig":"19"},{"size":5900,"mtime":1609172551769,"results":"30","hashOfConfig":"19"},{"size":6262,"mtime":1609141450069,"results":"31","hashOfConfig":"19"},{"size":1572,"mtime":1609137183106,"results":"32","hashOfConfig":"19"},{"size":701,"mtime":1609137165706,"results":"33","hashOfConfig":"19"},{"size":2575,"mtime":1609136957398,"results":"34","hashOfConfig":"19"},{"size":399,"mtime":1609139022866,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"szk4ug",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\index.js",[],["76","77"],"C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\App.js",[],"C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\component\\Header.jsx",["78"],"import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Nav, Navbar, Container, NavDropdown} from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { logout } from '../actions/userAction'\r\nimport { useEffect } from 'react';\r\n\r\nconst Header = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { userInfo } = useSelector( state => state.userLogin )\r\n\r\n    const logOutHandler = () => {\r\n      dispatch(logout());\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"primary\" variant=\"dark\">\r\n            <Container>\r\n                <LinkContainer to=\"/\">\r\n                    <Navbar.Brand>Home</Navbar.Brand>\r\n                </LinkContainer>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        { userInfo && (userInfo.category === 'SUPERVISOR' ? (\r\n                            <>\r\n                                <LinkContainer to=\"/questions\">\r\n                                    <Nav.Link><i className=\"fas fa-list\" />&nbsp;All Questions</Nav.Link>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/tests\">\r\n                                    <Nav.Link><i className=\"fas fa-list\"/>&nbsp;All Test</Nav.Link>\r\n                                </LinkContainer>\r\n                                \r\n                            </>\r\n                            ) : (\r\n                            <>\r\n                                <Nav.Link><i className=\"fas fa-list\"/>&nbsp;All Test</Nav.Link>\r\n                                <Nav.Link>Pricing</Nav.Link>\r\n                            </>\r\n                            ))}\r\n                    \r\n                    </Nav>\r\n                    <Nav>\r\n                        { userInfo ? (\r\n                            <NavDropdown title={userInfo.name.toUpperCase()} id=\"username\">\r\n                            \r\n                                <LinkContainer to='/profile'>\r\n                                    <NavDropdown.Item><i className=\"fas fa-user\" />&nbsp;PROFILE</NavDropdown.Item>\r\n                                </LinkContainer>\r\n\r\n                                <LinkContainer to='/login'>\r\n                                    <NavDropdown.Item onClick={logOutHandler}><i className=\"fas fa-sign-out-alt\" />&nbsp;LOGOUT</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                            \r\n                        </NavDropdown>\r\n                        ) : (\r\n                            <>\r\n                                <LinkContainer to=\"/login\">\r\n                                    <Nav.Link><i className=\"fas fa-sign-in-alt\" />&nbsp;Login</Nav.Link>\r\n                                </LinkContainer>\r\n                \r\n                                <LinkContainer to=\"/register\">\r\n                                    <Nav.Link><i className=\"fas fa-user-plus\" />&nbsp;Sign Up</Nav.Link>\r\n                                </LinkContainer>\r\n                            </>\r\n                        )}\r\n                    \r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\screen\\Register.jsx",["79","80"],"import React, {useState, useEffect }from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Form, Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom'\r\nimport { userRegister } from '../actions/userAction';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst Register = ({history}) => {\r\n\r\n    const [ name, setName ] = useState('');\r\n    const[ email, setEmail ] = useState('');\r\n    const[ password, setPassword ] = useState('');\r\n    const[ confirmPassword, setConfirmPassword ] = useState('');\r\n    const[ category, setCategory ] = useState('');\r\n\r\n    // const { loading, success, error } = useSelector( state => state.register )\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // useEffect( () => {\r\n\r\n    //     if( success ){\r\n    //         history.push('/login');\r\n    //     }\r\n    // }, [history, success]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if( password !== confirmPassword ) {\r\n            toast.error('Invalid Input')\r\n        } else{\r\n            dispatch( userRegister( name, email, password, category ));\r\n            history.push('/login');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center my-5\">\r\n                <Col sx={12} md={6}>\r\n                <h2>SIGN UP</h2>\r\n                <Form onSubmit={submitHandler}>\r\n                \r\n                    <Form.Group controlId=\"name\">\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            type=\"name\"\r\n                            value={name}\r\n                            placeholder=\"Enter name\"\r\n                            onChange={ e => setName(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"email\">\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            type=\"email\"\r\n                            value={email}\r\n                            placeholder=\"Enter Email Address\"\r\n                            onChange={ e => setEmail(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"category\">\r\n                        <Form.Label>Category</Form.Label>\r\n                        <Form.Control\r\n                            as=\"select\"\r\n                            value={category}\r\n                            onChange={ e => setCategory(e.target.value)}\r\n                            >\r\n                                <option value=''>Select Category</option>\r\n                                <option value='SUPERVISOR'>Supervisor</option>\r\n                                <option value='STUDENT'>Student</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            value={password}\r\n                            placeholder=\"Enter Password\"\r\n                            onChange={ e => setPassword(e.target.value) }\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"confirmPassword\">\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            value={confirmPassword}\r\n                            placeholder=\"Confirm Password\"\r\n                            onChange={ e => setConfirmPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type=\"submit\" variant=\"primary\">\r\n                        Submit\r\n                    </Button>\r\n\r\n                    <Row className=\"py-3 px-3\">\r\n                        ALREADY HAVE AN ACCOUNT ? &nbsp;&nbsp; <Link to='/login'>SIGN IN</Link>\r\n                    </Row> \r\n            </Form>\r\n            </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\screen\\Login.jsx",["81","82"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport { login } from \"../actions/userAction\";\r\n\r\nconst Login = ({ history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const { loading, userInfo, error } = useSelector((state) => state.userLogin);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [userInfo, history]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center my-5\">\r\n        <Col sx={12} md={6}>\r\n          <h2>SIGN IN</h2>\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter Email Address\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Enter Password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Login\r\n            </Button>\r\n\r\n            <Row className=\"py-3 px-3\">\r\n              NEW USER ? &nbsp;&nbsp; <Link to=\"/register\">REGISTER</Link>\r\n            </Row>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\store.js",[],"C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\reducer\\userReducer.jsx",[],"C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\constants\\userConstanst.jsx",[],"C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\actions\\userAction.jsx",[],"C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\component\\httpService.jsx",["83"],"import axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\naxios.interceptors.response.use( null, error => {\r\n\r\n    const expectedError = error.response && error.response.status >= 400 && error.response.status <500;\r\n    if( !expectedError ) {\r\n      toast.error(\"Unexpected error occured!\");\r\n    }\r\n  \r\n    return Promise.reject(error);\r\n  });\r\n\r\n  export default {\r\n      get: axios.get,\r\n      post: axios.post,\r\n      put: axios.put,\r\n      delete: axios.delete\r\n  };","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\screen\\QuestionList.jsx",["84"],"C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\screen\\QuestionCreate.jsx",["85","86","87","88"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Form, Button,  Col, Container} from 'react-bootstrap'\r\nimport { addQuestion } from '../actions/questionAction';\r\n\r\nconst QuestionCreate = ({history}) => {\r\n\r\n    const [ questionBody, setQuestion ] = useState('')\r\n    const [ explanation, setExplanation ] = useState('')\r\n    const [ subject, setSubject ] = useState('')\r\n    const [ weightage, setWeightage ] = useState(1)\r\n    const [ opt1, setOpt1 ] = useState({ optionBody: '', isAnswer: false });\r\n    const [ opt2, setOpt2 ] = useState({ optionBody: '', isAnswer: false });\r\n    const [ opt3, setOpt3 ] = useState({ optionBody: '', isAnswer: false });\r\n    const [ opt4, setOpt4 ] = useState({ optionBody: '', isAnswer: false });\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, success, error }  = useSelector( state => state.createQuestion )\r\n\r\n    // useEffect( () => {\r\n    //     if( questionAdded ){\r\n    //         history.push('/questions');\r\n    //     }\r\n    // },[ questionAdded, history]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const options = [ opt1, opt2, opt3, opt4 ]\r\n        dispatch(addQuestion({ questionBody, explanation, subject, weightage, options}));\r\n        history.push('/questions')\r\n    };\r\n\r\n    return (\r\n        <Container className=\"my-5\">\r\n        <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"question\">\r\n                <Form.Label>Question</Form.Label>\r\n                <Form.Control \r\n                    required\r\n                    placeholder=\"Question Description...\"\r\n                    type=\"text\"\r\n                    value={questionBody}\r\n                    onChange={ e => setQuestion(e.target.value)}\r\n                 />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"explanation\">\r\n                <Form.Label>Explanation</Form.Label>\r\n                <Form.Control\r\n                    required\r\n                    placeholder=\"Explanation....\"\r\n                    type=\"text\"\r\n                    value={explanation}\r\n                    onChange={ e => setExplanation(e.target.value)}\r\n                />\r\n            </Form.Group>\r\n            \r\n            <Form.Row>\r\n                <Form.Group as={Col} controlId=\"subject\">\r\n                    <Form.Label>Subject</Form.Label>\r\n                    <Form.Control \r\n                        required\r\n                        type=\"text\" \r\n                        placeholder=\"Subject\" \r\n                        value={subject}\r\n                        onChange={ e => setSubject(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} controlId=\"weightage\">\r\n                    <Form.Label>Weightage</Form.Label>\r\n                    <Form.Control \r\n                        required\r\n                        type=\"number\" \r\n                        placeholder=\"Select..\" \r\n                        value={weightage}\r\n                        onChange={ e => setWeightage(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n                <Form.Group as={Col} controlId=\"option1\">\r\n                    <Form.Label>Option A</Form.Label>\r\n                    <Form.Control \r\n                        required\r\n                        type=\"text\" \r\n                        placeholder=\"option...\" \r\n                        value={opt1.optionBody}\r\n                        onChange={ e => setOpt1({ ...opt1, optionBody: e.target.value})}\r\n                    />\r\n                    <Form.Check\r\n                            type='checkbox'\r\n                            checked={opt1.isAnswer}\r\n                            onChange={ e => setOpt1({...opt1, isAnswer: e.target.checked})}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} controlId=\"option2\">\r\n                <Form.Label>Option B</Form.Label>\r\n                    <Form.Control \r\n                        required\r\n                        type=\"text\" \r\n                        placeholder=\"option...\" \r\n                        value={opt2.optionBody}\r\n                        onChange={ e => setOpt2({ ...opt2, optionBody: e.target.value })}\r\n                    />\r\n                    <Form.Check\r\n                            type='checkbox'\r\n                            checked={opt2.isAnswer}\r\n                            onChange={ e => setOpt2({ ...opt2, isAnswer: e.target.checked })}/>\r\n                </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n                <Form.Group as={Col} controlId=\"option3\">\r\n                    <Form.Label>Option C</Form.Label>\r\n                    <Form.Control \r\n                        required\r\n                        type=\"text\" \r\n                        placeholder=\"option...\" \r\n                        value={opt3.optionBody}\r\n                        onChange={ e => setOpt3({ ...opt3, optionBody: e.target.value})}\r\n                    />\r\n                    <Form.Check\r\n                            type='checkbox'\r\n                            checked={opt3.isAnswer}\r\n                            onChange={ e => setOpt3({ ...opt3, isAnswer: e.target.checked  })}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} controlId=\"option4\">\r\n                    <Form.Label>Option D</Form.Label>\r\n                    <Form.Control \r\n                        required\r\n                        type=\"text\" \r\n                        placeholder=\"option...\" \r\n                        value={opt4.optionBody}\r\n                        onChange={ e => setOpt4({ ...opt4, optionBody: e.target.value})}\r\n                    />\r\n                    <Form.Check\r\n                            type='checkbox'\r\n                            checked={opt4.isAnswer}\r\n                            onChange={ e => setOpt4({ ...opt4, isAnswer: e.target.checked })}/>\r\n                </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default QuestionCreate\r\n","C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\reducer\\questionReducer.jsx",[],"C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\constants\\questionConstant.jsx",[],"C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\actions\\questionAction.jsx",[],"C:\\Users\\Sagar Singh Rawat\\Desktop\\online-exam-system\\client\\src\\component\\Loader.jsx",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":6,"column":10,"nodeType":"95","messageId":"96","endLine":6,"endColumn":19},{"ruleId":"93","severity":1,"message":"94","line":1,"column":26,"nodeType":"95","messageId":"96","endLine":1,"endColumn":35},{"ruleId":"93","severity":1,"message":"97","line":2,"column":23,"nodeType":"95","messageId":"96","endLine":2,"endColumn":34},{"ruleId":"93","severity":1,"message":"98","line":11,"column":11,"nodeType":"95","messageId":"96","endLine":11,"endColumn":18},{"ruleId":"93","severity":1,"message":"99","line":11,"column":30,"nodeType":"95","messageId":"96","endLine":11,"endColumn":35},{"ruleId":"100","severity":1,"message":"101","line":14,"column":3,"nodeType":"102","endLine":19,"endColumn":5},{"ruleId":"93","severity":1,"message":"103","line":14,"column":11,"nodeType":"95","messageId":"96","endLine":14,"endColumn":22},{"ruleId":"93","severity":1,"message":"94","line":1,"column":27,"nodeType":"95","messageId":"96","endLine":1,"endColumn":36},{"ruleId":"93","severity":1,"message":"98","line":19,"column":13,"nodeType":"95","messageId":"96","endLine":19,"endColumn":20},{"ruleId":"93","severity":1,"message":"104","line":19,"column":22,"nodeType":"95","messageId":"96","endLine":19,"endColumn":29},{"ruleId":"93","severity":1,"message":"99","line":19,"column":31,"nodeType":"95","messageId":"96","endLine":19,"endColumn":36},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'handleClose' is assigned a value but never used.","'success' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]